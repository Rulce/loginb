/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginb;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ricardo
 */
public class ConsulCursAlum extends javax.swing.JFrame {

    /**
     * Creates new form ConsulCursAlum
     */
    public ConsulCursAlum() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        Alumno alumLog = Loginb.alumnoLogeado;
        
        
        if (alumLog != null) {
            DefaultTableModel data = new DefaultTableModel(new String[]{"Nombre", "Sección", "Profesor","Nota"}, 0);

            for (Curso c : Loginb.cursos) {
                for (Alumno a : c.getAlumnos()) {
                    if (a.getNombre().equals(alumLog.getNombre())) {
                        data.addRow(new Object[]{c.getNombre(), c.getSeccion(), c.getProfesores(), a.getNota()});
                        break;
                    }
                }
            }
            jTable1.setModel(data);
        }else{
            System.out.println("No se encontro el alumno");
            }
        }
            
    public void actualizarDatos(){
    Alumno alumLog = Loginb.alumnoLogeado;
        if (alumLog != null) {
            DefaultTableModel data = new DefaultTableModel(new String[]{"Nombre", "Sección", "Profesor","Nota"}, 0);

            for (Curso c : Loginb.cursos) {
                for (Alumno a : c.getAlumnos()) {
                    if (a.getNombre().equals(alumLog.getNombre())) {
                        data.addRow(new Object[]{c.getNombre(), c.getSeccion(), c.getProfesores(), a.getNota()});
                        break;
                    }
                }
            }
            jTable1.setModel(data);
        }else{
            System.out.println("No se encontro el alumno");
            }
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setText("Desasignarse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(475, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        Alumno alumnoLogeado = Loginb.alumnoLogeado;
    
        if (alumnoLogeado != null) {
            int cursoAsignadoIndex = jTable1.getSelectedRow();
            if (cursoAsignadoIndex == -1) {
                JOptionPane.showMessageDialog(this, "Por favor, selecciona un curso para desasignarte", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String nombreCurso = jTable1.getValueAt(cursoAsignadoIndex, 0).toString();

                Curso cursoSeleccionado = null;
                for (Curso c : Loginb.cursos) {
                    if (c.getNombre().equals(nombreCurso)) {
                        cursoSeleccionado = c;
                        break;
                    }
                }
                if (cursoSeleccionado != null) {
                    boolean alumnoEncontrado = false;
                    for (Alumno a : cursoSeleccionado.getAlumnos()) {
                        if (a.getCarne().equals(alumnoLogeado.getCarne())) {
                            cursoSeleccionado.getAlumnos().remove(a);
                            alumnoEncontrado = true;
                            break;
                        }
                    }
                    if (alumnoEncontrado) {
                        JOptionPane.showMessageDialog(this, "Te desasignaste exitosamente");
                        actualizarDatos();
                    } else {
                        JOptionPane.showMessageDialog(this, "El alumno no está asignado a este curso", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
